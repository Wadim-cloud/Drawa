{"ast":null,"code":"var _jsxFileName = \"/Users/wadimseminsky/Downloads/Github/llama/llama-2-70b-chat/drawing-app/src/components/DrawCanvas.js\",\n  _s = $RefreshSig$();\n// src/components/DrawCanvas.js\nimport React, { useRef } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport { storage, firestore, auth } from '../firebaseConfig';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawCanvas = () => {\n  _s();\n  const canvasRef = useRef();\n  const saveDrawing = async () => {\n    const user = auth.currentUser;\n    if (user) {\n      // Get the drawing as a data URL (PNG image)\n      const drawingData = canvasRef.current.getDataURL(); // getDataURL instead of getSaveData\n\n      // Create a reference to the storage location\n      const storageRef = ref(storage, `drawings/${user.uid}/${Date.now()}.png`);\n\n      // Upload the drawing data\n      await uploadString(storageRef, drawingData, 'data_url');\n\n      // Get the download URL\n      const url = await getDownloadURL(storageRef);\n\n      // Save the drawing info to Firestore\n      await firestore.collection('drawings').add({\n        url,\n        userId: user.uid,\n        createdAt: new Date()\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CanvasDraw, {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveDrawing,\n      children: \"Save Drawing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawCanvas, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = DrawCanvas;\nexport default DrawCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawCanvas\");","map":{"version":3,"names":["React","useRef","CanvasDraw","storage","firestore","auth","ref","uploadString","getDownloadURL","jsxDEV","_jsxDEV","DrawCanvas","_s","canvasRef","saveDrawing","user","currentUser","drawingData","current","getDataURL","storageRef","uid","Date","now","url","collection","add","userId","createdAt","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/wadimseminsky/Downloads/Github/llama/llama-2-70b-chat/drawing-app/src/components/DrawCanvas.js"],"sourcesContent":["// src/components/DrawCanvas.js\nimport React, { useRef } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport { storage, firestore, auth } from '../firebaseConfig';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nconst DrawCanvas = () => {\n  const canvasRef = useRef();\n\n  const saveDrawing = async () => {\n    const user = auth.currentUser;\n\n    if (user) {\n      // Get the drawing as a data URL (PNG image)\n      const drawingData = canvasRef.current.getDataURL(); // getDataURL instead of getSaveData\n      \n      // Create a reference to the storage location\n      const storageRef = ref(storage, `drawings/${user.uid}/${Date.now()}.png`);\n\n      // Upload the drawing data\n      await uploadString(storageRef, drawingData, 'data_url');\n\n      // Get the download URL\n      const url = await getDownloadURL(storageRef);\n\n      // Save the drawing info to Firestore\n      await firestore.collection('drawings').add({\n        url,\n        userId: user.uid,\n        createdAt: new Date(),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <CanvasDraw ref={canvasRef} />\n      <button onClick={saveDrawing}>Save Drawing</button>\n    </div>\n  );\n};\n\nexport default DrawCanvas;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,SAASC,OAAO,EAAEC,SAAS,EAAEC,IAAI,QAAQ,mBAAmB;AAC5D,SAASC,GAAG,EAAEC,YAAY,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGZ,MAAM,CAAC,CAAC;EAE1B,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,IAAI,GAAGV,IAAI,CAACW,WAAW;IAE7B,IAAID,IAAI,EAAE;MACR;MACA,MAAME,WAAW,GAAGJ,SAAS,CAACK,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;;MAEpD;MACA,MAAMC,UAAU,GAAGd,GAAG,CAACH,OAAO,EAAE,YAAYY,IAAI,CAACM,GAAG,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAM,CAAC;;MAEzE;MACA,MAAMhB,YAAY,CAACa,UAAU,EAAEH,WAAW,EAAE,UAAU,CAAC;;MAEvD;MACA,MAAMO,GAAG,GAAG,MAAMhB,cAAc,CAACY,UAAU,CAAC;;MAE5C;MACA,MAAMhB,SAAS,CAACqB,UAAU,CAAC,UAAU,CAAC,CAACC,GAAG,CAAC;QACzCF,GAAG;QACHG,MAAM,EAAEZ,IAAI,CAACM,GAAG;QAChBO,SAAS,EAAE,IAAIN,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACR,UAAU;MAACI,GAAG,EAAEO;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BvB,OAAA;MAAQwB,OAAO,EAAEpB,WAAY;MAAAe,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}