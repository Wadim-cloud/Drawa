{"ast":null,"code":"var _jsxFileName = \"/Users/wadimseminsky/Downloads/Github/llama/llama-2-70b-chat/drawing-app/src/components/Login.js\";\n// src/components/Login.js\nimport React, { useEffect } from 'react';\n// Adjust this import based on what Firebase features you're using\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  // Your Firebase config goes here\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst Login = () => {\n  const handleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      console.log(\"User info:\", user);\n      // Handle successful login here\n    } catch (error) {\n      console.error(\"Error during sign in:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","jsxDEV","_jsxDEV","firebaseConfig","app","auth","Login","handleLogin","provider","result","user","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/wadimseminsky/Downloads/Github/llama/llama-2-70b-chat/drawing-app/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React, { useEffect } from 'react';\n// Adjust this import based on what Firebase features you're using\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\n\nconst firebaseConfig = {\n  // Your Firebase config goes here\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\nconst Login = () => {\n  const handleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      console.log(\"User info:\", user);\n      // Handle successful login here\n    } catch (error) {\n      console.error(\"Error during sign in:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <button onClick={handleLogin}>Sign in with Google</button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,cAAc,GAAG;EACrB;AAAA,CACD;AAED,MAAMC,GAAG,GAAGP,aAAa,CAACM,cAAc,CAAC;AACzC,MAAME,IAAI,GAAGP,OAAO,CAACM,GAAG,CAAC;AAEzB,MAAME,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,IAAIT,kBAAkB,CAAC,CAAC;IACzC,IAAI;MACF,MAAMU,MAAM,GAAG,MAAMT,eAAe,CAACK,IAAI,EAAEG,QAAQ,CAAC;MACpD,MAAME,IAAI,GAAGD,MAAM,CAACC,IAAI;MACxBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdhB,OAAA;MAAQiB,OAAO,EAAEZ,WAAY;MAAAO,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACE,EAAA,GAnBId,KAAK;AAqBX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}